/****************************************************************************/
/************** Profiling and Analyzing the Yelp Dataset Coursera ***********/
/********************** Worksheet by Sofia Helene Thai **********************/
/****************************************************************************/

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.


/**********************************************/
/************** Table of Content **************/
/**********************************************/

/*
Part 1: Yelp Dataset Profiling and Understanding
	1. Profile the data by finding the total number of records for each of the tables
	2. Find the total distinct records by either the foreign key or primary key for each table
	3. Are there any columns with null values in the Users table?
	4. Display the smallest (minimum), largest (maximum), and average (mean) value
	5. List the cities with the most reviews in descending order
	6. Find the distribution of star ratings to the business in the following cities
		i. Avon
		ii. Beachwood
	7. Find the top 3 users based on their total number of reviews
	8. Does posing more reviews correlate with more fans?
	9. Are there more reviews with the word "love" or with the word "hate" in them?
	10. Find the top 10 users with the most fans

Part 2:Inferences and Analysis 
	1. Pick one city/category and group the businesses in that city/category by their overall star rating. 
	Compare the businesses with 2-3 stars to the businesses with 4-5 stars
		i. Do the two groups you chose to analyze have a different distribution of *hours*?
			a) Business Comparison within City Las Vegas: 2-3 star vs. 4-5 star businesses
			b) Business Comparison within Category Restaurants: 2-3 star vs. 4-5 star businesses
		ii. Do the two groups you chose to analyze have a different distribution of *hours*?
			a) Business Comparison within City Las Vegas: 2-3 star vs. 4-5 star businesses
			b) Business Comparison within Category Restaurants: 2-3 star vs. 4-5 star businesses
		iii. Are you able to infer anything from the location-data provided between these two groups?
			a) Comparison Businesses in Category Restaurant with 4 and 5 stars
			b) Comparison Businesses in City Las Vegas with 4 and 5 stars

	2. Compare businesses that are open with the ones that are closed. 
	What differences can you find between closed businesses and open businesses? 
		i. Difference 1: Difference in their attributes
		ii. Difference 2: Difference in their average ratings

	3. Choose the type of analysis you want to conduct on the Yelp dataset and prepare the data for analysis.
		i. Indicate the type of analysis you chose to do
		ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data
		iii. Output of your finished dataset
		iv. Provide the SQL code you used to create your final dataset:
*/


/******************************************************************************/
/************** Part 1: Yelp Dataset Profiling and Understanding **************/
/******************************************************************************/

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	

/**************
 2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key. **************/

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute =  1115
v. Review =  10000
vi. Checkin =  493
vii. Photo = 10000
viii. Tip = 3979 (foreign key = business_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


/************** 
3. Are there any columns with null values in the Users table? Indicate "yes," or "no." 
**************/

	Answer: No
	
	
SQL code used to arrive at answer:
SELECT *
FROM user
WHERE id IS NULL OR 
		  name IS NULL OR 
		  review_count IS NULL OR 
		  yelping_since IS NULL OR
		  useful IS NULL OR 
		  funny IS NULL OR 
		  cool IS NULL OR 
		  fans IS NULL OR 
		  average_stars IS NULL OR 
		  compliment_hot IS NULL OR 
		  compliment_more IS NULL OR 
		  compliment_profile IS NULL OR 
		  compliment_cute IS NULL OR 
		  compliment_list IS NULL OR 
		  compliment_note IS NULL OR 
		  compliment_plain IS NULL OR 
		  compliment_cool IS NULL OR 
		  compliment_funny IS NULL OR 
		  compliment_writer IS NULL OR 
		  compliment_photos IS NULL;
	
	

	
/************** 
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:
**************/ 
	i. Table: Review, Column: Stars
	
		min: 1  	max:	5	avg:3.7082	
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max: 2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


/************** 
5. List the cities with the most reviews in descending order: 
**************/

	SQL code used to arrive at answer: 

SELECT city, 		
	review_count AS number_of_reviews	-- number of reviews
FROM business 
GROUP BY city					-- compare cities with each other
ORDER BY review_count DESC;			-- Desc for most reviews at the top
	
	
	Copy and Paste the Result Below:
+------------------------+-------------------+
| city                   | number_of_reviews |
+------------------------+-------------------+
| Woodmere Village       |               242 |
| Mount Lebanon          |               138 |
| Charlotte              |               120 |
| McMurray               |               112 |
| North York             |               109 |
| Enterprise             |                89 |
| Matthews               |                77 |
| Munroe Falls           |                74 |
| Ahwatukee              |                69 |
| Pittsburgh             |                68 |
| Woodmere               |                68 |
| Tolleson               |                65 |
| Pineville              |                63 |
| Carnegie               |                61 |
| Macedonia              |                58 |
| Markham                |                54 |
| Whitchurch-Stouffville |                52 |
| Windsor                |                50 |
| Goodyear               |                49 |
| Gibsonia               |                45 |
| Summerlin              |                44 |
| Peninsula              |                42 |
| Richfield              |                42 |
| Dormont                |                40 |
| nboulder city          |                40 |
+------------------------+-------------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
/************** 
6. Find the distribution of star ratings to the business in the following cities: 
**************/

/*** i. Avon ***/

SELECT stars, 			-- select which stars were given in review 
	count(stars)		-- select how many reviews gave this star-rating
FROM business 
WHERE city = "Avon"		-- output only for city Avon
GROUP BY stars			-- For seeing how many reviews gave how many stars 


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   1.5 |            1 |
|   2.5 |            2 |
|   3.5 |            3 |
|   4.0 |            2 |
|   4.5 |            1 |
|   5.0 |            1 |
+-------+--------------+

/*** ii. Beachwood ***/

SQL code used to arrive at answer:

SELECT stars, 			-- select which stars were given in review
	count(stars)		-- select how many reviews gave this star-rating
FROM business 
WHERE city = "Beachwood" 	-- output only for city Beachwood
GROUP BY stars			-- For seeing how many reviews gave how many stars 

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   2.0 |            1 |
|   2.5 |            1 |
|   3.0 |            2 |
|   3.5 |            2 |
|   4.0 |            1 |
|   4.5 |            2 |
|   5.0 |            5 |
+-------+--------------+

/************** 
7. Find the top 3 users based on their total number of reviews: 
**************/
		
	SQL code used to arrive at answer:

SELECT id, 
	name, 
	review_count AS number_of_reviews	-- the user has an id and a name
FROM user
ORDER BY review_count DESC			-- Desc: top users on top of table
LIMIT 3;					-- because only the top 3

	
		
	Copy and Paste the Result Below:

+------------------------+--------+-------------------+
| id                     | name   | number_of_reviews |
+------------------------+--------+-------------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |              2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |              1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |              1339 |
+------------------------+--------+-------------------+
		


/************** 
8. Does posing more reviews correlate with more fans? 
**************/

	Please explain your findings and interpretation of the results:

it doesn't seem to correlate so much. In the table below you can see the review_count in 
descending order and the number of fans are not descending at all. For example, Sara 
poses the second most reviews but has less fans than someone who poses half as much as her
(e.g. Lissa).
	
+------------------------+-----------+--------------+------+
| id                     | name      | review_count | fans |
+------------------------+-----------+--------------+------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
| -3s52C4zL_DHRK0ULG6qtg | Sara      |         1629 |   50 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 |
| -gokwePdbXjfS0iF7NsUGA | eric      |         1116 |   16 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
| -fUARDNuXAfrOn4WLSZLgA | Ed        |          904 |   38 |
| -hKniZN2OdshWLHYuj21jQ | Nicole    |          864 |   43 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 |
| -kO6984fXByyZm3_6z2JYg | Dominic   |          836 |   37 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
| -l9giG8TSDBG1jnUBUXp5w | Alison    |          775 |   61 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 |
+------------------------+-----------+--------------+------+
	
/************** 
9. Are there more reviews with the word "love" or with the word "hate" in them?
**************/

	Answer: There are more reviews with the word "love" in it than the word "hate".

	
	SQL code used to arrive at answer:

/**** Count the reviews that have love in it: ****/
SELECT count(text)		-- number of texts that have 
FROM review
WHERE text like '%love%' 	-- love in between the sentence
OR text like '%love' 		-- love at the end of the sentence
OR text like 'love%';		-- love at the beginning of the sentence

-- Result: 1780


/**** Count the reviews that have love in it:****/
SELECT count(text), 
	text
FROM review
WHERE text like '%hate%' 	-- hate in between the sentence
OR text like '%hate' 		-- hate at the end of the sentence
OR text like 'hate%';		-- hate at the beginning of the sentence

-- Result: 232


	
	
/************** 
10. Find the top 10 users with the most fans: 
**************/

	SQL code used to arrive at answer:
SELECT name AS name_of_user, 
	fans AS number_of_fans	
FROM user
ORDER BY fans DESC		-- Descending, because we want the top users
LIMIT 10;			-- for Top 10

	
	
Copy and Paste the Result Below:
+--------------+----------------+
| name_of_user | number_of_fans |
+--------------+----------------+
| Amy          |            503 |
| Mimi         |            497 |
| Harald       |            311 |
| Gerald       |            253 |
| Christine    |            173 |
| Lisa         |            159 |
| Cat          |            133 |
| William      |            126 |
| Fran         |            124 |
| Lissa        |            120 |
+--------------+----------------+
	
/**********************************************************************/ 		
/************** Part 2: Inferences and Analysis ***********************/
/**********************************************************************/ 

/************** 1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

How did I pick the city and the category? I took the category with the most rows and the city with the most rows. I used the following code:

-- SQL Code to pick the category with the most rows 

SELECT count(category) 
	AS number_of_rows, 
	category		-- how many rows does each business category have
FROM category
GROUP BY category		-- compare categories to each other
ORDER BY count(category) DESC;	-- DESC for picking the category with the most rows

--> Category: Restaurants 

-- SQL Code to pick the city with the most rows 

SELECT count(city), 
	city 				-- how many rows does each city have
FROM business
GROUP BY city			-- compare categories to each other
ORDER BY count(city) DESC;	-- DESC for picking the city with the most rows

--> City: Las Vegas

	
/************** 
i. Do the two groups you chose to analyze have a different distribution of *hours*? 
**************/

/************** 
Distribution of *hours*: Comparison distribution of hours within City Las Vegas 2-3 star vs. 4-5 star businesses 
**************/

SQL Code to answer the question: 

SELECT r.stars, 
	h.hours AS opening_hours 
FROM (business b 
INNER JOIN hours h				-- Join hours and business table 
	ON b.id = h.business_id)
INNER JOIN review r				-- Join review and business table 
	ON b.id = r.business_id
WHERE b.city = "Las Vegas";			-- Filter Businesses in Las Vegas

+-------+-----------------------+
| stars | opening_hours         |
+-------+-----------------------+
|     4 | Monday|10:00-23:00    |
|     5 | Monday|10:00-23:00    |
|     4 | Tuesday|10:00-23:00   |
|     5 | Tuesday|10:00-23:00   |
|     4 | Friday|10:00-23:00    |
|     5 | Friday|10:00-23:00    |
|     4 | Wednesday|10:00-23:00 |
|     5 | Wednesday|10:00-23:00 |
|     4 | Thursday|10:00-23:00  |
|     5 | Thursday|10:00-23:00  |
|     4 | Sunday|10:00-23:00    |
|     5 | Sunday|10:00-23:00    |
|     4 | Saturday|10:00-23:00  |
|     5 | Saturday|10:00-23:00  |
+-------+-----------------------+

--> Answer: Since there are only ratings from 4-5 and no ratings below that I can only compare the businesses in Las Vegas (LV) which have 5 stars to the businesses in LV with 4 stars. There are no differences between the businesses in LV with 5 and restaurants with 4 stars whatsover. 


/************** 
Distribution of hours: Comparison within Category Restaurants: 2-3 star vs. 4-5 star businesses 
**************/

SQL Code:

SELECT  h.hours AS opening_hours, 
	r.stars 
FROM (((business b 
INNER JOIN hours h
	ON b.id = h.business_id)	-- Join business table and hours table 
INNER JOIN category c
	ON b.id = c.business_id)	-- Join business and category table 
INNER JOIN review r
	ON b.id = r.business_id)	-- Join business and review table 
WHERE c.category = "Restaurants"	-- Filtering to category "restaurants"	
GROUP BY h.hours			-- Compare opening hours to each other
ORDER BY h.hours, r.stars;

+-----------------------+-------+
| opening_hours         | stars |
+-----------------------+-------+
| Friday|10:00-23:00    |     5 |
| Friday|11:00-22:00    |     5 |
| Friday|17:30-22:00    |     4 |
| Friday|6:00-14:30     |     5 |
| Monday|10:00-23:00    |     5 |
| Monday|11:00-22:00    |     5 |
| Monday|6:00-14:30     |     5 |
| Saturday|10:00-23:00  |     5 |
| Saturday|11:00-22:00  |     5 |
| Saturday|11:30-14:00  |     4 |
| Saturday|9:00-13:00   |     5 |
| Sunday|10:00-23:00    |     5 |
| Sunday|11:00-22:00    |     5 |
| Sunday|15:00-21:00    |     4 |
| Thursday|10:00-23:00  |     5 |
| Thursday|11:00-22:00  |     5 |
| Thursday|17:30-22:00  |     4 |
| Thursday|6:00-14:30   |     5 |
| Tuesday|10:00-23:00   |     5 |
| Tuesday|11:00-22:00   |     5 |
| Tuesday|17:30-22:00   |     4 |
| Tuesday|6:00-14:30    |     5 |
| Wednesday|10:00-23:00 |     5 |
| Wednesday|11:00-22:00 |     5 |
| Wednesday|11:30-14:00 |     4 |
+-----------------------+-------+
(Output limit exceeded, 25 of 26 total rows shown)

--Answer: Since there are only ratings from 4-5 and no ratings below that I can only compare the Restaurants which have 5 stars to the restaurants with 4 stars. There are no differences between restaurants with 5 and restaurants with 4 stars whatsover. 
-- Since there is a 4 and 5 rating for each opening hour, the star rating is not related to the opening hours


/************** 
ii. Do the two groups you chose to analyze have a different *number of reviews*?
**************/

/************** 
a) Numbers of Reviews: Business Comparison within City Las Vegas: 2-3 star vs. 4-5 star businesses 
**************/

SQL Code:

SELECT ROUND(AVG(b.review_count), 2) AS Average_number_of_reviews, 
	CASE
	WHEN r.stars = 3 
	OR r.stars = 2 THEN "low_rated"		-- low-rated business = 2-3 stars
	WHEN r.stars > 3 THEN "high_rated"	-- high-rated business = 4-5 stars
	ELSE "other (rating = 1)"		-- grouping businesses: other = 1 star
	END rating_group			-- calling this column rating_group
FROM review r					
INNER JOIN business b 
	ON b.id = r.business_id			-- Join review with business table
WHERE b.city = "Las Vegas" 			-- Filter businesses in Las Vegas	
	AND r.stars IS NOT NULL			-- Filter rows with star ratings	GROUP BY rating_group;				-- comparing rating groups

+---------------------------+--------------------+
| Average_number_of_reviews | rating_group       |
+---------------------------+--------------------+
|                    560.79 | high_rated         |
|                    612.03 | low_rated          |
|                    302.09 | other (rating = 1) |
+---------------------------+--------------------+	


--> Answer: The lower rated business group (2-3 stars) have higher numbers of reviews than the high-rated group (4-5 stars) 
     


/************** 
b) Number of reviews: Comparison within Category Restaurants: 2-3 star vs. 4-5 star businesses 
**************/

SQL Code:

SELECT  b.name AS Restaurant_name, 
	b.review_count AS number_of_review, 
	ROUND(AVG(r.stars),2) AS Average_star_rating 
FROM (business b
INNER JOIN category c			-- Join business table with category table
	ON b.id = c.business_id)			
INNER JOIN review r			-- Join business table with review table
	ON b.id = r.business_id
WHERE c.category = "Restaurants"	-- Filter only category restaurants
GROUP BY b.review_count			-- compare the average stars of restaurants
ORDER BY b.review_count;

+----------------------------------------+------------------+---------------------+
| Restaurant_name                        | number_of_review | Average_star_rating |
+----------------------------------------+------------------+---------------------+
| Cafe Tandoor                           |               32 |                 4.0 |
| Matt's Big Breakfast                   |              188 |                 4.5 |
| Slyman's Restaurant                    |              361 |                 5.0 |
| Bootleggers Modern American Smokehouse |              431 |                4.67 |
| Big Wong Restaurant                    |              768 |                 4.5 |
+----------------------------------------+------------------+---------------------+



-- Answer: Since for the restaurant subset there are only restaurants with star ratings 4 and 5 I chose to compare these two groups together. The Restaurants with 4 stars and the restaurants with 5 stars do not systematically have a different numbers of reviews. What could be a possible hypothesis is that a medium amount of review counts could be related to the best star ratings 
-- in other words: the restaurant is not so bad that many are writing a bad review about it but is still so visible that people do write reviews. But since the sample is so small (only 5 restaurants) no clear answer can be given to this question.  

    
/************* 
iii. Are you able to infer anything from the location-data provided between these two groups? Explain. 
**************/

-- Answer: As location data I took the postal code (in fact, the latitude and longitude would also work or even the address, but I decided to take the postal code because it is the most clear variable)
-- It doesn't make sense to group the businesses in two groups and compare their average postal-code to each other

/************* 
Comparison Businesses in Las Vegas with 2-3 and 4-5 stars: 
**************/

SQL Code:

SELECT ROUND(AVG(r.stars),2) AS average_stars,  
	b.postal_code, 
	b.name AS business_name
FROM business b 
INNER JOIN review r			-- Join business table with review table
	ON b.id = r.business_id
WHERE b.city = "Las Vegas"		-- Filter only business from Las Vegas
GROUP BY postal_code			-- comparing postal codes to each other
ORDER BY postal_code DESC, AVG(r.stars) DESC;

+---------------+-------------+----------------------------------+
| average_stars | postal_code | business_name                    |
+---------------+-------------+----------------------------------+
|          3.71 | 89183       | Michael's Gourmet Room           |
|           5.0 | 89149       | The Butcher Block                |
|          4.43 | 89148       | Pressed For Juice                |
|           4.8 | 89147       | Discount Beads                   |
|          3.88 | 89146       | Fun Tacos                        |
|           5.0 | 89144       | Leoné Café                       |
|           5.0 | 89141       | Fire Station Dog Park            |
|           5.0 | 89139       | The Perfect Scoop & Boba Tea     |
|           5.0 | 89136       | Tequila Bar and Grill            |
|          3.13 | 89135       | Lazy Dog Restaurant & Bar        |
|           4.0 | 89134       | Upper Crust Pizza                |
|           3.0 | 89130       | Fiesta Rancho                    |
|           1.0 | 89129       | Nevada Eye Care West             |
|           4.0 | 89128       | Big O Tires                      |
|           3.0 | 89123       | Walmart Supercenter              |
|           5.0 | 89121       | El Fish Taco                     |
|           5.0 | 89120       | Law Office of Shimer Zach        |
|          3.38 | 89119       | Hertz Rent A Car                 |
|           3.6 | 89118       | Rachell Allen Nclex Review       |
|           4.5 | 89117       | La Maison de Maggie              |
|           5.0 | 89115       | Hitchin Post Saloon & Steakhouse |
|          4.25 | 89113       | Arabesque Dance & Fitness Studio |
|          3.71 | 89109       | The Buffet                       |
|           4.0 | 89107       | Pop's Philly Steaks              |
|          4.57 | 89104       | Essence Cannabis Dispensary      |
+---------------+-------------+----------------------------------+
(Output limit exceeded, 25 of 29 total rows shown)

-- In the output you can see a descending order in the postal code. However, the average star rating does not follow any trend (as would be expected, if there was a relationship with the postal code) which leads to the conclustion that there is no relationship between the average star rating and the postal code. 
-- Furthermore, it seems difficult to make inferences based on the postal code since each business has a different postal code so it is not clear whether the star rating depends on the business or on the postal code. 		

/********* 
Postal Code: Comparison between Restaurants with 4 and 5 stars 
**************/

SQL Code:

SELECT ROUND(AVG(r.stars), 2) AS average_stars, 
	b.postal_code
FROM (business b
INNER JOIN category c		-- Join business table with category table
	ON b.id = c.business_id)
INNER JOIN review r		-- Join business table with review table
	ON b.id = r.business_id		
WHERE c.category = "Restaurants"	-- Filter by Category "Restaurants"
GROUP BY postal_code
ORDER BY postal_code;

+---------------+-------------+
| average_stars | postal_code |
+---------------+-------------+
|           5.0 | 44114       |
|           4.0 | 44202       |
|           4.5 | 85016       |
|          4.67 | 85028       |
|           4.5 | 89146       |
+---------------+-------------+

--> Answer: Above in the output it seems that there is no systematic correlation between the postal code and the stars. This indicates that the success of the restaurant is not related to the location it has. Therefore, we cannot infer from the location data to the numbers of stars of a restaurant. 
-- Sidenote: This inference is made with caution because there are too few data points to analyze. It makes no sense to make two groups since there are already 2 groups (businesses with 4 and businesses with 5 stars)

		
/***** 
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
*****/
	
/************* 
i. Difference 1: Difference in their attributes 
**************/

SQL code

SELECT a.name AS attribute, 
	b.is_open
FROM business b
JOIN attribute a		-- Joint business table with attribute table
	ON b.id = a.business_id
GROUP BY a.name        		-- group by attribute
ORDER BY b.is_open;     	-- order by the open/closed businesses to have a better overview

+----------------------------+---------+
| attribute                  | is_open |
+----------------------------+---------+
| AgesAllowed                |       0 |
| AcceptsInsurance           |       1 |
| Alcohol                    |       1 |
| Ambience                   |       1 |
| BestNights                 |       1 |
| BikeParking                |       1 |
| BusinessAcceptsBitcoin     |       1 |
| BusinessAcceptsCreditCards |       1 |
| BusinessParking            |       1 |
| ByAppointmentOnly          |       1 |
| Caters                     |       1 |
| CoatCheck                  |       1 |
| DogsAllowed                |       1 |
| DriveThru                  |       1 |
| GoodForDancing             |       1 |
| GoodForKids                |       1 |
| GoodForMeal                |       1 |
| HappyHour                  |       1 |
| HasTV                      |       1 |
| Music                      |       1 |
| NoiseLevel                 |       1 |
| OutdoorSeating             |       1 |
| RestaurantsAttire          |       1 |
| RestaurantsDelivery        |       1 |
| RestaurantsGoodForGroups   |       1 |
+----------------------------+---------+
(Output limit exceeded, 25 of 32 total rows shown)

--> Answer: It seems, by looking at the output above, that only the open businesses have attributes. The closed ones do not have attributes. 

         
         
/*************
ii. Difference 2: Difference in their average ratings 
**************/

-- SQL Code:

SELECT count(r.stars) AS number_of_ratings, 
	ROUND(AVG(r.stars), 2) AS Average_rating, 
	b.is_open
FROM business b
JOIN review r
	ON b.id = r.business_id		-- join business and review table together 	
GROUP BY b.is_open;			-- in order to have the two groups compared to 					each other

+-------------------+----------------+---------+
| number_of_ratings | Average_rating | is_open |
+-------------------+----------------+---------+
|                71 |           3.65 |       0 |
|               565 |           3.76 |       1 |
+-------------------+----------------+---------+

-- In the table output above you can see that businesses that are still open got much more number of ratings but their average is only minimally higher than the businesses that are closed.

-- Distribution of the stars along the scale 
SELECT count(r.stars) AS amount_of_ratings, 
	r.stars AS stars_per_rating, 
	b.is_open
FROM business b
JOIN review r
	ON b.id = r.business_id	-- join business and review table together 
GROUP BY r.stars, 
	b.is_open		-- how many reviews gave 1, 2, 3, 4, 5 stars
ORDER BY b.is_open		

+-------------------+------------------+---------+
| amount_of_ratings | stars_per_rating | is_open |
+-------------------+------------------+---------+
|                 9 |                1 |       0 |
|                 7 |                2 |       0 |
|                10 |                3 |       0 |
|                19 |                4 |       0 |
|                26 |                5 |       0 |
|                77 |                1 |       1 |
|                45 |                2 |       1 |
|                63 |                3 |       1 |
|               131 |                4 |       1 |
|               249 |                5 |       1 |
+-------------------+------------------+---------+

-- In the output you can see that how the stars are distributed. The closed businesses have stars that are much more evenly distributed along the scale than the open businesses.  	



	
/************ 
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.
************/

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
/************** 
i. Indicate the type of analysis you chose to do: 
**************/ 

I want to see based on which kind of criteria (useful, cool, funny) are related to the numbers of stars a business receives. I want to see if there is a trend in increasing stars if the rating on the scales useful, cool and funny increases.
I am going to look at the average rating in the stars, useful, funny and cool scale for each business to see if there is a relationship between the stars and one of the criteria useful, funny and cool.
Nevertheless, in order to analyze this data in depth (and not only by eye) a multiple linear regression is needed and this needs to be done with another program.
        
         
/************* 
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data: 
**************/ 

For the analysis I need the table review (columns: useful, funny, cool, business_id, stars) and the business table (columns name, id). I am going to join the two tables together based on the business_id (in the review table) and the id column (in the business table)
I intentionally chose integers and not text data in order to analyze them quantitatively. Also, I did not limited the businesses to a specific category because there would not be enough data to calculate correlations.                       

                  
/************** 
iii. Output of your finished dataset: 
**************/ 

+-------------+----------------------+---------------------+-----------------------+
| star_rating | average_funny_rating | average_cool_rating | average_useful_rating |
+-------------+----------------------+---------------------+-----------------------+
| 1           |                 0.43 |                 0.2 |                  1.19 |
| 2           |                 0.29 |                0.23 |                  1.21 |
| 3           |                 0.48 |                0.67 |                  1.11 |
| 4           |                 0.29 |                0.47 |                  0.79 |
| 5           |                 0.13 |                0.37 |                  0.68 |
+-------------+----------------------+---------------------+-----------------------+
 
In the output above you can see that there is no systematic increase/decrease in the funny, cool and useful rating based on the star rating. Noticeable is that the star rating 3 had the highest rating on the funny and the cool scale whereas star rating 2 had the highest rating on the useful scale. 
This indicates, that probably the 3 ratings are not so informative about how high the star rating is, especially if looking at how simiar the values are to each other in the funny and cool scale. The useful scale has a larger range of values and there it seems that 5 star rated businesses are perceived on average as less useful than 1 star rated businesses, which is surprising.         


/************** 
iv. Provide the SQL code you used to create your final dataset: 
**************/ 

SELECT CASE				-- group the star rating into groups 1-5
	WHEN r.stars = 5 THEN "5"	
	WHEN r.stars = 4 THEN "4"
	WHEN r.stars = 3 THEN "3"
	WHEN r.stars = 2 THEN "2"
	WHEN r.stars = 1 THEN "1"
	ELSE "other"				-- in case there are other ratings (e.g. typos)
	END star_rating, 
ROUND(AVG(r.funny), 2) AS average_funny_rating, -- Averaging scales by rating groups
ROUND(AVG(r.cool), 2) AS average_cool_rating, 	
ROUND(AVG(r.useful), 2) AS average_useful_rating
FROM review r
INNER JOIN business b				-- Join business with review table
	ON b.id = r.business_id
GROUP BY star_rating				-- compare 5 star rating groups 
ORDER BY star_rating ASC;
